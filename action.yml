name: 'Hello World'
description: 'Greet someone'
inputs:
  maven-metadata-url:
    description: 'The URL to the maven-metadata.xml file to get latest version from'
    required: true
  pages-path:
    description: 'The path to publish to GitHub Pages'
    required: false
    default: ''
  dokka:
    description: 'The type of dokka build to run'
    required: false
    default: ''
  release-files:
    description: 'The files to attach to the release'
    required: false
    default: ''
  maven-username:
    description: 'The username of the repository to publish to'
    required: true
  maven-password:
    description: 'The password of the repository to publish to'
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17
        cache: gradle

    - name: Set env variable for latest maven version
      shell: bash
      run: >
        echo "RELEASE_VERSION=$( \
          curl -S -s ${{ inputs.maven-metadata-url }} | \
          grep -oP '(?!<latest>)[\d\.]*(?=</latest>)' \
        )" >> $GITHUB_ENV

    - name: Run gradle build and publish
      shell: bash
      run: >
        gradle build publish
        -PmineinabyssMavenUsername=${{ inputs.maven-username }} -PmineinabyssMavenPassword=${{ inputs.maven-password }}

    - name: Build with dokka
      shell: bash
      # jvmargs workaround for dokka builds failing on CI, see https://github.com/Kotlin/dokka/issues/1405
      run: gradle ${{ inputs.dokka }} -Dorg.gradle.jvmargs=-XX:MaxMetaspaceSize=512m
      if: ${{ inputs.dokka != ''}}

    - name: Get version from gradle
      shell: bash
      id: extract_version
      run: |
        echo "BUMPED_VERSION"=$(gradle properties --console=plain -q | grep "^version:" | awk '{printf $2}') >> $GITHUB_ENV
      if: ${{ inputs.release-files != '' }}

    - name: Create GitHub Release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ github.token }}"
        prerelease: false
        automatic_release_tag: v${{ env.BUMPED_VERSION }}
        files: ${{ inputs.release-files }}
      if: ${{ inputs.release-files != '' }}

    - name: Upload github pages artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: ${{ inputs.pages-path }}
      if: ${{ inputs.pages-path != '' }}
