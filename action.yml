name: 'Publish MineInAbyss packages'
description: 'Publishes to our maven repo, documentation, and release jars'
inputs:
  maven-metadata-url:
    description: 'The URL to the maven-metadata.xml file to get latest version from'
    required: true
  maven-snapshot-metadata-url:
    description: 'The URL to the maven-metadata.xml file for snapshots/prereleases'
    required: false
  pages-path:
    description: 'The path to publish to GitHub Pages'
    required: false
    default: ''
  dokka:
    description: 'The type of dokka build to run'
    required: false
    default: ''
  release-files:
    description: 'The files to attach to the release'
    required: false
    default: ''
  publish-github-release:
    description: 'Whether to publish a GitHub release'
    required: false
    default: 'true'
  maven-username:
    description: 'The username of the repository to publish to'
    required: true
  maven-password:
    description: 'The password of the repository to publish to'
    required: true
  snapshot-branch:
    description: 'When the workflow runs on this branch, publish to snapshots instead of releases'
    required: false
    default: 'develop'
runs:
  using: "composite"
  steps:
    - shell: bash
      run: echo "IS_SNAPSHOT=${{github.ref == format('refs/heads/{0}', inputs.snapshot-branch)}}" >> $GITHUB_ENV

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
        cache: gradle

    - name: Set env variable for latest maven version
      shell: bash
      run: |
        VERSION=$(curl -S -s ${{ inputs.maven-metadata-url }} 2>/dev/null | grep -oP '(?<=<latest>)(.*?)(?=<\/latest>)' || echo "0")
        echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

    - name: Set env variable for latest maven snapshot version if passed
      shell: bash
      run: |
        SNAPSHOT_VERSION=$(curl -S -s ${{ inputs.maven-snapshot-metadata-url }} 2>/dev/null | grep -oP '(?<=<latest>)(.*?)(?=<\/latest>)' || echo "0")
        echo "BRANCH_VERSION=$SNAPSHOT_VERSION" >> $GITHUB_ENV
      if: ${{ inputs.maven-snapshot-metadata-url != '' }}

    - name: Run gradle build and publish
      shell: bash
      run: >
        gradle build publish
        -PmineinabyssMavenUsername=${{ inputs.maven-username }} -PmineinabyssMavenPassword=${{ inputs.maven-password }} -Pplugin_path=${{ github.workspace }}/publish

    - name: Build with dokka
      shell: bash
      run: gradle ${{ inputs.dokka }}
      if: ${{ inputs.dokka  != '' && env.IS_SNAPSHOT == false }}

    - name: Get version from gradle
      shell: bash
      id: extract_version
      run: |
        echo "BUMPED_VERSION"=$(gradle properties --console=plain -q | grep "^version:" | awk '{printf $2}') >> $GITHUB_ENV
      if: ${{ inputs.release-files != '' }}

    - name: Generate a changelog
      uses: orhun/git-cliff-action@v3
      id: git-cliff
      with:
        args: "-vv --latest --strip header --github-repo ${{ github.repository }}"
      if: ${{ inputs.publish-github-release == true }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        token: ${{ github.token }}
        body: ${{ steps.git-cliff.outputs.content }}
        prerelease: ${{ env.IS_SNAPSHOT }}
        tag_name: ${{ env.BUMPED_VERSION }}
        files: ${{ inputs.release-files }}
      if: ${{ inputs.publish-github-release == true }}

    - name: Upload github pages artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: ${{ inputs.pages-path }}
      if: ${{ inputs.pages-path != '' && env.IS_SNAPSHOT == false }}
